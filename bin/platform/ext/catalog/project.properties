# -----------------------------------------------------------------------
# Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------

impex.nonexistend.clsattrvalue.fallback.enabled=false

# Determines whether the legacy or servicelayer persistence adapter is used for catalog synchronization
synchronization.legacy.mode=false

#Allows to define how synchronization process translates a collection of references in case that not all
#source references can be translated. 
#Set this property to true if you want to translate collections partially. It means if translation of
#particular reference fails, then this particular reference will be skipped but translation of collection
#will be continued. Parent item will be marked as pending.
#Set this property to false if you don't want to translate collections partially. It means if translation
#of any reference fails, then translation of whole collection will be stopped and target collection will
#remain unchanged or empty in case of new parent item.
synchronization.allow.partial.collection.translation=true

# Directory to store dump files for synchronization. If property's value is empty, the sync dump files will
# be stored in workspace dir
synchronization.dumpfile.tempdir=${HYBRIS_TEMP_DIR}/sync

# secure media folder
media.folder.catalogsync.secured=true

# set true for logging stacktraces from the de.hybris.platform.catalog.jalo.synchronization.ItemCopyCreator.copy() method on info level
synchronization.itemcopycreator.stacktraces=false

#Allows you to define how synchronization process determines entities which require insertion, removal
#or modifications
#Setting this property to true means that queries that designate objects for synchronization
#are optimised  - Synchronization determines the objects to be synchronized taking
#into account the deployment in which they are located
synchronization.within.deployment=true

#Comma separated list of code types whose items will not cause deadlocks caused by concurrent modifications ("expected version X but got Y") during synchronization
synchronization.hjmp.optimistic.locking.disabled.types=CatalogVersionSyncCronJobHistory

#Tunning Product2FeatureRelation relation - relation ordering attribute (featurePosition) for Product2FeatureRelation relation
# will not be reset to value generated by SELECT MAX queries in OneToManyHandler during catalog sync
relation.Product2FeatureRelation.reordered=sync

#When system contains ItemSyncTimestamp items with reference to missing target catalog items
#the sync algorithm tries to fix them by reusing them
synchronization.support.for.stale.sync.ts.enabled=true
