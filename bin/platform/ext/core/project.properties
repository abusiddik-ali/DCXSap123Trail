# -----------------------------------------------------------------------
# Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------

core.global-context=global-core-spring.xml,core-cache.xml,global-servicelayer-spring.xml,global-core-jmx-spring.xml,global-statistics-spring.xml

core.application-context=core-spring.xml,persistence-spring.xml,core-media-spring.xml,core-profiling-spring.xml,core-jmx-spring.xml,core-filter-spring.xml,servicelayer-spring.xml,user-spring.xml,security-spring.xml,media-spring.xml,i18n-spring.xml,interceptor-spring.xml,event-spring.xml

#-----------------------------------------------------------------------------------#
# This property stores the information about core types and attributes					#
# that need custom generated signature of the method.											#
#
# Important information!! : please update the content of the 								#
# de.hybris.bootstrap.typesystem.YNamespace#MIGRATED_CORE_DEPLOYMENTS_INFO map.		#
#-----------------------------------------------------------------------------------#
# required pattern of the value: type,attr,attr...;type,attr,...;							#
# 'type' value is required. Last ';' is required												#
#-----------------------------------------------------------------------------------#
migrated_core_type.info=Title,code;Media,URL;AbstractMedia,mime;Product;Unit;C2LItem,active,isocode;Country;Language;Region;Currency;AbstractOrder;Cart;Order;AbstractOrderEntry;CartEntry;OrderEntry;Tax,code;Discount,code;DeliveryMode,code;PaymentMode,code;PaymentInfo;Principal,uid;PrincipalGroup;User;UserGroup;Address;UserRight,code;SavedValues;SavedValueEntry;HMCHistoryEntry;UserProfile;

##################
##  !!!! temporary switch to legacy mode for persistence !!!!
persistence.legacy.mode=true
##################

## Enable audit tables creation
auditing.enabled=true

## Enable audit report production mode. All configuration warnings will be reported as errors
audit.report.production.mode=false

## Audit SQL select statement size limit for given DB
audit.query.limit.sap=100000

#Override for ProjectStructureTest test which checks for redundant libraries in the commerce suite
#Syntax: duplicatejarchecker.ignore.partialPathToFirstLib_____partialPathToSecondLib=comment
duplicatejarchecker.ignore.platformwebservices/web/webroot/WEB-INF/lib/jersey-server_____platform/ext/core/lib/jersey-server=all_platformwebservices_duplicates_are_ignored
duplicatejarchecker.ignore.platformwebservices/web/webroot/WEB-INF/lib/jersey-client_____platform/ext/core/lib/jersey-client=all_platformwebservices_duplicates_are_ignored
duplicatejarchecker.ignore.platformwebservices/web/webroot/WEB-INF/lib/jersey-test-framework-core_____platform/ext/core/lib/jersey-test-framework-core=all_platformwebservices_duplicates_are_ignored

# Enable to migrate core types during system start up
should.migrate.core.types=false

# JDBC interceptor settings
#jdbc.interceptor.enabled=true
#jdbc.interceptor.factory.class=de.hybris.platform.jdbcwrapper.interceptor.factory.DefaultJDBCInterceptorFactory

#JDBC recovery settings
#jdbc.recovery.backoff.initial.seconds=10
#jdbc.recovery.backoff.increase.factor=1.3333333334
#jdbc.recovery.backoff.max.seconds=60
#jdbc.recovery.common.recoverable.error.codes=
jdbc.recovery.sqlserver.recoverable.error.codes=4060, 40197, 40501, 40613, 49918, 49919, 49920, 4221
#jdbc.recovery.postgresql.recoverable.error.codes=
#jdbc.recovery.mysql.recoverable.error.codes=
#jdbc.recovery.hsqldb.recoverable.error.codes=
#jdbc.recovery.oracle.recoverable.error.codes=
#jdbc.recovery.sap.recoverable.error.codes=
#SQLRecoverableException that should be treated as non recoverable
#jdbc.recovery.common.nonrecoverable.error.codes=
#jdbc.recovery.sqlserver.nonrecoverable.error.codes=
#jdbc.recovery.postgresql.nonrecoverable.error.codes=
#jdbc.recovery.mysql.nonrecoverable.error.codes=
#jdbc.recovery.hsqldb.nonrecoverable.error.codes=
jdbc.recovery.oracle.nonrecoverable.error.codes=17002, 17008
#jdbc.recovery.sap.nonrecoverable.error.codes=


user.password.acceptEmpty=true

# If you are going to implement the Polyglot Persistence you can turn this flag to true to see all flexible search
# queries which must be translated from the SQL to the Polyglot  dialect. false by default.
#polyglot.validation.enabled=false;

# should throw FlexibleSearchException when validation fail for query with using polyglot
# e.g. using polyglot types in sql dialect
polyglot.validation.should.throw.exception=false

#pause in miliseconds for "thread registry logger thread".
#it means that after each x (e.g. 1 for registered threads) minute(s) it will log registered threads or thread dump respectively
threadregistry.pause.registeredthreads = 60000
threadregistry.pause.threadsdump = 600000

# determines whether config-based handler should be installed. If true, the sameSite values will be based on
# cookies.*.SameSite properties. If false, sameSiteSettings.properties in tomcat/bin/sameSiteCookies.properties file
# will be used (if provided)
cookies.SameSite.install.application.handler=true

# if config-based handler is installed and true, the sameSite value will be set based on configuration. If false,
# the sameSite won't be set
cookies.SameSite.enabled=false

# default sameSite value
cookies.SameSite=None

# example for domain 'null', path '/' and name 'JSESSIONID'
# cookies.null./.JSESSIONID.SameSite=None


# allows to store files with long names in local cache 
# prevent.longfilenames.localcache=true

# All HTTP sessions established before User password change are treated as stale. By default all stale sessions are
# invalidated. Of course if an HTTP session is used to change the password this particular session is not invalidated.
# Following property allows you to disable this behaviour globally.
session.staleness.detection.enabled=true

# If you want to override the global configuration for any extension you can use following property format to do so.
#session.staleness.detection.{extension_name}.enabled=true

# Allows you to control if the spring related data are reported as part of the Commerce Statistics. Disabled by default.
#statistics.collector.spring-overview.enabled=false


log4j2.appender.jsonMetricsAppender.type=Console
log4j2.appender.jsonMetricsAppender.name=JSONMetricsAppender
log4j2.appender.jsonMetricsAppender.layout.type=PatternLayout
log4j2.appender.jsonMetricsAppender.layout.pattern={"timeMillis":"%d{UNIX_MILLIS}", "thread":"%t","level":"%p","loggerName":"%c","message":"%m", "metrics":%X{metrics}}%n

log4j2.logger.logsMetricsReporter.name=de.hybris.platform.metrics.dropwizard.Slf4jMdcMetricsReporter
log4j2.logger.logsMetricsReporter.level=DEBUG
log4j2.logger.logsMetricsReporter.additivity=false
log4j2.logger.logsMetricsReporter.appenderRef.jsonMetricsAppender.ref=JSONMetricsAppender


metrics.reporter.logsMetricsReporter.enabled=false

# defines the SpEL expressions used to filter the names of metrics reported periodically where #metric is placeholder for metric name
# if many filters are defined, the metric will be logged when at least one filter is matching
# reports all metrics when no filters is set
metrics.reporter.logsMetricsReporter.filters.cache=(\\#metric.contains(',module=cache,'))
metrics.reporter.logsMetricsReporter.filters.links.pgrel=(\\#metric.contains(',module=jalo,') && \\#metric.contains(',relation=PrincipalGroupRelation,'))

# defines the period (in seconds) how often metrics should be reported
metrics.reporter.logsMetricsReporter.period.seconds=900

# defines whether to use read-replica in DefaultGenericSearchService and what type codes to exclude
generic.search.read-replica.enabled=true
generic.search.read-replica.type.codes.exclude=

