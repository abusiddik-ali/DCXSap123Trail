<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util
           https://www.springframework.org/schema/util/spring-util.xsd">


    <alias name="defaultTaskService" alias="taskService"/>
    <bean id="defaultTaskService" class="de.hybris.platform.task.impl.DefaultTaskService">
        <property name="modelService" ref="modelService"/>
        <property name="eventService" ref="eventService"/>
        <property name="scheduleAndTriggerStrategy" ref="scheduleAndTriggerStrategy"/>
        <property name="taskDao" ref="taskDao"/>
        <property name="metricRegistry" ref="metricRegistry"/>
        <property name="tasksProvider" ref="tasksProvider"/>
        <property name="taskEngineRetryTemplate" ref="taskEngineRetryTemplate"/>
    </bean>

    <alias name="configurableTasksProvider" alias="tasksProvider"/>

    <bean id="configurableTasksProvider" class="de.hybris.platform.task.impl.ConfigurableTasksProvider" autowire="constructor">
        <constructor-arg ref="bufferedAuxTablesTasksProvider" index="1"/>
    </bean>

    <bean id="defaultTasksProvider" class="de.hybris.platform.task.impl.DefaultTasksProvider">
        <property name="metricRegistry" ref="metricRegistry"/>
        <property name="flexibleSearchService" ref="defaultFlexibleSearchService"/>
        <property name="typeService" ref="defaultTypeService"/>
    </bean>

    <bean id="auxiliaryTablesBasedTaskProvider" class="de.hybris.platform.task.impl.AuxiliaryTablesBasedTaskProvider">
        <property name="auxiliaryTablesSchedulerRole" ref="auxiliaryTablesSchedulerRole"/>
        <property name="auxiliaryTablesWorkerRole" ref="auxiliaryTablesWorkerRole"/>
    </bean>

    <bean id="inMemoryTasksProvider" class="de.hybris.platform.task.impl.InMemoryTasksProvider">
        <property name="metricRegistry" ref="metricRegistry"/>
        <property name="flexibleSearchService" ref="defaultFlexibleSearchService"/>
        <property name="typeService" ref="defaultTypeService"/>
    </bean>

    <bean id="bufferedAuxTablesTasksProvider" class="de.hybris.platform.task.impl.BufferedAuxTablesTasksProvider">
        <constructor-arg index="0" ref="auxiliaryTablesBasedTaskProvider"/>
        <constructor-arg index="1" ref="metricRegistry"/>
    </bean>

    <bean id="auxiliaryTablesGatewayFactory" class="de.hybris.platform.task.impl.AuxiliaryTablesGatewayFactory">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="typeService" ref="typeService"/>
    </bean>

    <bean id="taskDao" class="de.hybris.platform.task.impl.TaskDAO">
        <constructor-arg ref="tenantFactory" />
    </bean>

    <bean id="scheduleAndTriggerStrategy" class="de.hybris.platform.task.impl.DefaultScheduleAndTriggerStrategy">
        <property name="modelService" ref="modelService"/>
        <property name="taskDao" ref="taskDao"/>
    </bean>

    <bean id="defaultTaskExecutionStrategy" class="de.hybris.platform.task.impl.DefaultTaskExecutionStrategy">
        <property name="modelService" ref="modelService"/>
        <property name="runnerClass" value="de.hybris.platform.task.TaskRunner"/>
    </bean>

    <bean id="repollListener" class="de.hybris.platform.task.impl.RepollListener" />

    <bean id="taskActionExecutionStrategy" class="de.hybris.platform.task.action.TaskActionExecutionStrategy" parent="abstractBusinessService">
        <property name="taskService" ref="taskService"/>
        <property name="creationStrategy" ref="actionTaskCreationStrategy">
        </property>
    </bean>

    <alias alias="actionTaskCreationStrategy" name="defaultActionTaskCreationStrategy"/>
    <bean id="defaultActionTaskCreationStrategy" class="de.hybris.platform.task.action.DefaultActionTaskCreationStrategy"/>

    <bean id="actionPerformableTaskRunner" class="de.hybris.platform.task.action.ActionPerformableTaskRunner">
        <property name="executionStrategy" ref="plainActionExecutionStrategy"/>
    </bean>

    <!-- Actions -->
    <alias alias="actionService" name="defaultActionService" />
    <bean id="defaultActionService" class="de.hybris.platform.servicelayer.action.impl.DefaultActionService" parent="abstractBusinessService">
        <property name="executionStrategyRegistry" ref="actionExecutionStrategyRegistry" />
    </bean>

    <bean id="actionExecutionStrategyRegistry" class="de.hybris.platform.servicelayer.action.impl.DefaultActionExecutionStrategyRegistry" />

    <bean id="plainActionExecutionStrategy" class="de.hybris.platform.servicelayer.action.plain.PlainActionExecutionStrategy" parent="abstractBusinessService" />

    <bean id="scriptingTaskRunner" class="de.hybris.platform.task.action.ScriptingTaskRunner">
        <property name="scriptingLanguagesService" ref="scriptingLanguagesService"/>
    </bean>

    <bean id="triggerTaskRunner" class="de.hybris.platform.task.action.TriggerTaskRunner">
        <property name="modelService" ref="modelService"/>
        <property name="triggerService" ref="triggerService"/>
    </bean>

    <bean id="executeCronJobTaskRunner" class="de.hybris.platform.cronjob.task.ExecuteCronJobTaskRunner">
        <property name="cronJobService" ref="cronJobService"/>
    </bean>

    <bean id="triggerTaskExecutionStrategy" class="de.hybris.platform.task.impl.TriggerTaskExecutionStrategy" parent="defaultTaskExecutionStrategy">
        <property name="runnerClass" value="de.hybris.platform.task.action.TriggerTaskRunner"/>
    </bean>

    <bean id="auxiliaryTablesSchedulerRole" class="de.hybris.platform.task.impl.AuxiliaryTablesSchedulerRole">
        <property name="gatewayFactory" ref="auxiliaryTablesGatewayFactory"/>
        <property name="metricRegistry" ref="metricRegistry"/>
        <property name="typeService" ref="typeService"/>
        <property name="workerHelper">
            <bean class="de.hybris.platform.task.impl.DefaultWorkerHelper" />
        </property>
    </bean>

    <bean id="auxiliaryTablesWorkerRole" class="de.hybris.platform.task.impl.AuxiliaryTablesWorkerRole">
        <property name="gatewayFactory" ref="auxiliaryTablesGatewayFactory"/>
        <property name="metricRegistry" ref="metricRegistry"/>
    </bean>

    <alias alias="taskEngineRetryTemplate" name="defaultTaskEngineRetryTemplate" />
    <bean id="defaultTaskEngineRetryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy" ref="taskEngineBackOffPolicy"/>
        <property name="retryPolicy" ref="taskEngineRetryPolicy"/>
    </bean>

    <alias alias="taskEngineBackOffPolicy" name="defaultTaskEngineBackOffPolicy" />
    <bean id="defaultTaskEngineBackOffPolicy" class="org.springframework.retry.backoff.FixedBackOffPolicy">
        <property name="backOffPeriod" value="${task.engine.retry.backoffperiod:2000}"/>
    </bean>

    <alias alias="taskEngineRetryPolicy" name="defaultTaskEngineRetryPolicy" />
    <bean id="defaultTaskEngineRetryPolicy" class="org.springframework.retry.policy.SimpleRetryPolicy">
        <constructor-arg index="0" value="${task.engine.retry.maxattempts:5}"/>
        <constructor-arg index="1">
            <map>
                <entry key="java.lang.IllegalStateException" value="true"/>
            </map>
        </constructor-arg>
    </bean>
</beans>
